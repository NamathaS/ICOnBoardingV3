<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/knockout-3.4.2.js"></script>
<script src="~/Scripts/knockout-3.4.2.debug.js"></script>
<script src="~/Scripts/knockout.validation.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/moment.min.js"></script>

<div class="container" style="margin-top:3%">
    <a href="#" class="btn btn-info" data-bind="click: $root.AddSale">Add New Sale Record</a> <br /><br />

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Customer Name</th>
                <th>Product Name</th>
                <th>Store Name</th>
                <th>Date Sold</th>
                <th>Action(Edit)</th>
                <th>Action(Delete)</th>
            </tr>
        </thead>
        <tbody id="tBody" data-bind="foreach:AllSales">
            <tr>
                <td data-bind="text:CustomerName"></td>
                <td data-bind="text:ProductName"></td>
                <td data-bind="text:StoreName"></td>
                <td data-bind="text:DateSold"></td>
                <td>
                    <button id="edit" class="btn btn-warning" data-bind="click : $parent.Edit"><span class='glyphicon glyphicon-edit'></span> Edit</button>
                </td>
                <td>
                    <button id="delete" class="btn btn-danger" data-bind="click : $parent.Delete"><span class='glyphicon glyphicon-trash'></span> Delete</button>
                </td>
            </tr>
        </tbody>
    </table>
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content" data-bind="with : SelectedSale" style="width:640px">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Sale</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <input id="id" type="hidden" value="0" data-bind="value:Id" />
                        <label @*class="control-label"*@ style="width:150px">Select Customer</label>
                        <select id="customer" class="form-control" style="display:inline" data-bind="options : $parent.AllCustomers,optionsText: 'Name',value: $parent.SelectedCustomer, optionsCaption: 'Select Customer '"></select>
                        <br />
                        <br />
                        <label @*class="control-label"*@ style="width:150px">Product Name</label>
                        <select id="product" class="form-control" style="display:inline" data-bind="options : $parent.AllProducts,value: $parent.SelectedProduct, optionsText: 'Name', optionsCaption: 'Select Product '"></select>
                        <br />
                        <br />
                        <label @*class="control-label"*@ style="width:150px">Store Name</label>
                        <select id="store" class="form-control" style="display:inline" data-bind="options : $parent.AllStores,value: $parent.SelectedStore, optionsText: 'Name', optionsCaption: 'Select Store '"></select>
                        <br />
                        <br />
                        <label @*class="control-label"*@ style="width:150px">Date</label>
                        <input id="date" type="text" class="form-control" style="display:inline" data-bind="value:DateSold">

                    </form>
                </div>
                <div class="modal-footer">
                    <button id="saveSale" type="submit" class="btn btn-default" data-bind="click : $parent.SaveSale ,enable:$parent.selectedValid">Save</button>
                    <button type="button" class="btn btn-default " data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
</div>
<script>
    function SaleModel(data) {
        var self = this;
        self.Id = data ? ko.observable(data.Id) : 0;
        self.CustomerId = data ? ko.observable(data.SelectedCustomer.Id): ko.observable();
        self.ProductId = data ? ko.observable(data.SelectedProduct.Id) : ko.observable();
        self.StoreId = data ? ko.observable(data.SelectedStore.Id) : ko.observable();
        self.CustomerName = data ? ko.observable(data.SelectedCustomer.Name): ko.observable();
        self.ProductName = data ? ko.observable(data.SelectedProduct.Name): ko.observable();
        self.StoreName = data ? ko.observable(data.SelectedStore.Name) : ko.observable();
          
        self.DateSold = data ? ko.observable(moment(data.DateSold).format('L')) : ko.observable(moment(new Date()).format('L'))
        self.DateSold.extend({
            required: {
                params: true,
                message: 'Please enter date'
            }
        });
    }
    function viewModel() {
        self = this;
        self.AllSales = ko.observableArray();
        self.SelectedSale = ko.observable("");
        self.AllCustomers = ko.observableArray();
        self.AllProducts = ko.observableArray();
        self.AllStores = ko.observableArray();
        self.SelectedCustomer = ko.observable("");
        self.SelectedProduct = ko.observable("");
        self.SelectedStore = ko.observable("");

        self.selectedValid = ko.computed(function () {
            var errors = ko.validation.group(self.SelectedSale());
            return errors().length === 0;
        })
        self.AddSale = function () {
            deleteFlag = 0;
            self.SelectedSale(new SaleModel({ Id: 0, SelectedCustomer: "", SelectedProduct: "", SelectedStore: "", DateSold: Date() }));
            $('#myModal').modal('show');
        }
        self.Edit = function (data) {
            deleteFlag = 0;
            self.SelectedSale(data);
            var cust = ko.utils.arrayFirst(self.AllCustomers(), function (item) {
                return item.Id == data.CustomerId();
            });
            self.SelectedCustomer(cust);
            var prod = ko.utils.arrayFirst(self.AllProducts(), function (item) {
                return item.Id == data.ProductId();
            });
            self.SelectedProduct(prod);
            var stor = ko.utils.arrayFirst(self.AllStores(), function (item) {
                return item.Id == data.StoreId();
            });
            self.SelectedStore(stor);
            $('#myModal').modal('show');
        }
        self.Delete = function (data) {
            self.SelectedSale(data);
            var cust = ko.utils.arrayFirst(self.AllCustomers(), function (item) {
                return item.Id == data.CustomerId();
            });
            self.SelectedCustomer(cust);
            var prod = ko.utils.arrayFirst(self.AllProducts(), function (item) {
                return item.Id == data.ProductId();
            });
            self.SelectedProduct(prod);
            var stor = ko.utils.arrayFirst(self.AllStores(), function (item) {
                return item.Id == data.StoreId();
            });
            self.SelectedStore(stor);
            $('#myModal').modal('show');
            $('#customer').prop('disabled', true);
            $('#product').prop('disabled', true);
            $('#store').attr('disabled', true);
            $('#date').attr('disabled', true);
            $('#saveSale').html('Delete');
            deleteFlag = 1;
        }
        self.SaveSale = function (data) {

            $.ajax({

                url: '/Sales/SaveToDatabase?deleteFlag=' + deleteFlag,
                data: {
                    Id: data.Id,
                    CustomerId: self.SelectedCustomer().Id,
                    ProductId: self.SelectedProduct().Id,
                    StoreId: self.SelectedStore().Id,
                    DateSold: moment(data.DateSold()).toDate().toUTCString()
                },
                type: "POST",
                cache: false,
                success: function (savingStatus) {
                    location.reload();
                    if (savingStatus.success == false) { alert("Please fill the empty fields"); }
                },
                error: function () {
                    alert("error")
                }
            });
            //}
        }
        loadSales();
        loadCustomer();
        loadProduct();
        loadStore();
        function loadSales() {
            $.ajax({
                type: "GET",
                url: '/Sales/LoadAllSales',
                dataType: 'json',

                success: function (data) {
                    data.forEach(function (sale) {
                        self.AllSales.push(new SaleModel(sale));
                    });
                },
                error: function (req, status, err) {
                    console.log('something went wrong', status, err);
                }
            });
        }
        function loadCustomer() {
            $.ajax({
                type: "GET",
                url: '/Customers/LoadAllCustomers',
                dataType: 'json',
                success: function (data) {
                    data.forEach(function (customer) {
                        self.AllCustomers.push(customer);
                    });

                },
                error: function (req, status, err) {
                    console.log('something went wrong', status, err);
                }
            });
        }
        function loadProduct() {
            $.ajax({
                type: "GET",
                url: '/Products/LoadAllProducts',
                dataType: 'json',
                success: function (data) {
                    data.forEach(function (product) {
                        self.AllProducts.push(product);
                    });

                },
                error: function (req, status, err) {
                    console.log('something went wrong', status, err);
                }
            });
        }
        function loadStore() {
            $.ajax({
                type: "GET",
                url: '/Stores/LoadAllStores',
                dataType: 'json',
                success: function (data) {
                    data.forEach(function (store) {
                        self.AllStores.push(store);
                    });
                },
                error: function (req, status, err) {
                    console.log('something went wrong', status, err);
                }
            });
        }
    }
    $(document).ready(function () {
        var deleteFlag = 0;
        ko.applyBindings(new viewModel());
    });
</script>